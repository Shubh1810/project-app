{"version":3,"file":"index.js","sources":["../../src/Breadcrumbs/BreadcrumbsItem.tsx","../../src/Breadcrumbs/index.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nimport Text from '../Text';\nimport InlineLink from '../InlineLink';\n\nimport styles from './BreadcrumbsItem.module.scss';\n\nexport interface BreadcrumbsItemProps {\n  /** The content for `Breadcrumbs.Item`. */\n  children: React.ReactNode;\n  /** Apply CSS class to `Breadcrumbs.Item`. */\n  className?: Parameters<typeof cx>[0];\n  /** The component that will wrap around `Breadcrumbs.Item`. In most cases, it would be `Link` from React Router or any other framework. */\n  component?: React.ComponentType<any>;\n  /** Specific the variant of `Breadcrumbs.Item`. */\n  variant?: 'default' | 'current';\n  /** A string that represents the `Link` location. */\n  to?: string | undefined;\n}\n\nexport const BreadcrumbsItem: React.FC<BreadcrumbsItemProps> = ({\n  children,\n  component,\n  to,\n  variant,\n  className,\n}) => {\n  if (to === undefined || component === undefined) {\n    return (\n      <li className={cx(styles.breadcrumbItem)}>\n        <Text as='span' size={14} className={className}>\n          {children}\n        </Text>\n      </li>\n    );\n  }\n  return (\n    <li className={cx(styles.breadcrumbItem)}>\n      <InlineLink\n        component={component}\n        to={to}\n        className={cx(\n          styles.breadcrumbLink,\n          variant && styles[variant],\n          className,\n        )}\n        textClassName={styles.linkText}\n      >\n        {children}\n      </InlineLink>\n    </li>\n  );\n};\n\nexport default BreadcrumbsItem;\nexport { styles };\n","import React from 'react';\nimport cx from 'classnames';\n\nimport BreadcrumbsItem, { BreadcrumbsItemProps } from './BreadcrumbsItem';\nimport Text from '../Text';\n\nimport styles from './Breadcrumbs.module.scss';\n\nexport interface BreadcrumbsComposite {\n  Item: React.FC<BreadcrumbsItemProps>;\n}\nexport interface Props {\n  /** The content should be one or more `Breadcrumbs.Item`. */\n  children?:\n    | React.ReactElement<BreadcrumbsItemProps>\n    | React.ReactElement<BreadcrumbsItemProps>[];\n  /** Apply CSS class to `Breadcrumbs`. */\n  className?: Parameters<typeof cx>[0];\n  /** Accessible name for `Breadcrumbs`, which will be visually hidden by default. */\n  label: string;\n}\n\nexport const Breadcrumbs: React.FC<Props> & BreadcrumbsComposite = ({\n  children,\n  className,\n  label,\n}) => {\n  const arrayChildren = React.Children.toArray(children);\n\n  return (\n    <nav aria-label={label}>\n      <ul className={cx(styles.breadcrumbs, className)}>\n        {React.Children.map(children, (child, index) => {\n          const isLast = index === arrayChildren.length - 1;\n          return (\n            <>\n              {child}\n              {!isLast && (\n                <Text as='span' className={styles.slash} aria-hidden='true'>\n                  /\n                </Text>\n              )}\n            </>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nBreadcrumbs.displayName = 'Breadcrumbs';\nBreadcrumbs.Item = BreadcrumbsItem;\n\nexport default Breadcrumbs;\nexport { styles };\n"],"names":["Breadcrumbs","_a","children","className","label","arrayChildren","React","Children","toArray","cx","styles","breadcrumbs","map","child","index","isLast","length","Text","as","slash","displayName","Item","component","to","variant","undefined","breadcrumbItem","size","InlineLink","breadcrumbLink","textClassName","linkText"],"mappings":"usDAqBO,28BCCMA,EAAsD,SAACC,OAClEC,aACAC,cACAC,UAEMC,EAAgBC,UAAMC,SAASC,QAAQN,GAE7C,OACEI,4CAAiBF,GACfE,8BAAIH,UAAWM,UAAGC,EAAOC,YAAaR,IACnCG,UAAMC,SAASK,IAAIV,GAAU,SAACW,EAAOC,GACpC,IAAMC,EAASD,IAAUT,EAAcW,OAAS,EAChD,OACEV,gDACGO,GACCE,GACAT,wBAACW,QAAKC,GAAG,OAAOf,UAAWO,EAAOS,oBAAmB,oBAYrEnB,EAAYoB,YAAc,cAC1BpB,EAAYqB,KD9BmD,SAACpB,OAC9DC,aACAoB,cACAC,OACAC,YACArB,cAEA,YAAWsB,IAAPF,QAAkCE,IAAdH,EAEpBhB,8BAAIH,UAAWM,UAAGC,EAAOgB,iBACvBpB,wBAACW,QAAKC,GAAG,OAAOS,KAAM,GAAIxB,UAAWA,GAClCD,IAMPI,8BAAIH,UAAWM,UAAGC,EAAOgB,iBACvBpB,wBAACsB,cACCN,UAAWA,EACXC,GAAIA,EACJpB,UAAWM,UACTC,EAAOmB,eACPL,GAAWd,EAAOc,GAClBrB,GAEF2B,cAAepB,EAAOqB,UAErB7B"}