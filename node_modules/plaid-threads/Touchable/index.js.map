{"version":3,"file":"index.js","sources":["../../src/Touchable/index.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nimport styles from './Touchable.module.scss';\n\nexport interface TouchableProps {\n  ariaChecked?: boolean;\n  ariaControls?: string;\n  ariaExpanded?: boolean;\n  ariaHasPopup?: boolean;\n  ariaLabel?: string;\n  ariaPressed?: boolean;\n  block?: boolean;\n  centered?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n  component?: React.ComponentType<any>;\n  componentProps?: React.ComponentProps<any>;\n  disabled?: boolean;\n  hideFocus?: boolean;\n  href?: string;\n  id?: string;\n  inline?: boolean;\n  onClick?: (event: React.MouseEvent) => void;\n  onFocus?: (event: React.MouseEvent) => void;\n  onMouseEnter?: (event: React.MouseEvent) => void;\n  onMouseLeave?: (event: React.MouseEvent) => void;\n  onMouseOver?: (event: React.MouseEvent) => void;\n  onBlur?: (event: React.KeyboardEvent) => void;\n  ref?: any;\n  rel?: string;\n  role?: string;\n  size?: 14 | 16;\n  tabIndex?: number;\n  target?: string;\n  to?: string;\n  type?: 'button' | 'submit' | 'reset';\n  wide?: boolean;\n}\n\nexport type Props = TouchableProps;\n\nexport const Touchable: React.ForwardRefExoticComponent<TouchableProps> = React.forwardRef(\n  (\n    {\n      ariaChecked,\n      ariaControls,\n      ariaExpanded,\n      ariaHasPopup,\n      ariaLabel,\n      ariaPressed,\n      block,\n      centered,\n      children,\n      className,\n      component,\n      componentProps,\n      disabled,\n      hideFocus,\n      href,\n      id,\n      inline,\n      onClick,\n      onFocus,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOver,\n      onBlur,\n      rel,\n      role,\n      size,\n      tabIndex,\n      target,\n      to,\n      type = 'button',\n      wide,\n      ...restProps\n    },\n    ref: React.RefObject<HTMLButtonElement>,\n  ) => {\n    const props = {\n      className: cx(\n        styles.resetButtonOrLink,\n        inline && styles.inline,\n        block && styles.block,\n        wide && styles.wide,\n        hideFocus && styles.hideFocus,\n        centered && styles.centered,\n        size === 14 && styles.size14,\n        size === 16 && styles.size16,\n        className,\n      ),\n      ...componentProps,\n    };\n    if (component) {\n      const Component = component;\n      return (\n        <Component {...props} to={to} role={role} {...restProps}>\n          {children}\n        </Component>\n      );\n    }\n    if (href) {\n      // TODO(swb) consider a11y concerns of this scenario\n      /*eslint jsx-a11y/anchor-has-content: 1 */\n      return (\n        <a\n          {...props}\n          aria-label={ariaLabel}\n          aria-haspopup={ariaHasPopup}\n          aria-expanded={ariaExpanded}\n          href={href}\n          id={id}\n          role={role}\n          target={target}\n          rel={rel}\n          onClick={onClick}\n          onFocus={onFocus}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          onMouseOver={onMouseOver}\n          onBlur={onBlur}\n          ref={ref}\n          {...restProps}\n        >\n          {children}\n        </a>\n      );\n    }\n    return (\n      <button\n        {...props}\n        id={id}\n        onClick={onClick}\n        onFocus={onFocus}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onMouseOver={onMouseOver}\n        onBlur={onBlur}\n        type={type}\n        disabled={disabled}\n        role={role}\n        aria-checked={ariaChecked}\n        aria-controls={ariaControls}\n        aria-disabled={disabled}\n        aria-expanded={ariaExpanded}\n        aria-haspopup={ariaHasPopup}\n        aria-label={ariaLabel}\n        aria-pressed={ariaPressed}\n        tabIndex={tabIndex}\n        ref={ref}\n        {...restProps}\n      >\n        {children}\n      </button>\n    );\n  },\n);\n\nTouchable.displayName = 'Touchable';\nexport default Touchable;\nexport { styles };\n"],"names":["Touchable","React","forwardRef","_a","ref","ariaChecked","ariaControls","ariaExpanded","ariaHasPopup","ariaLabel","ariaPressed","block","centered","children","className","component","componentProps","disabled","hideFocus","href","id","inline","onClick","onFocus","onMouseEnter","onMouseLeave","onMouseOver","onBlur","rel","role","size","tabIndex","target","to","_b","type","wide","restProps","props","cx","styles","resetButtonOrLink","size14","size16","Component","displayName"],"mappings":"giEA0CaA,EAA6DC,UAAMC,YAC9E,SACEC,EAkCAC,GAjCE,IAAAC,gBACAC,iBACAC,iBACAC,iBACAC,cACAC,gBACAC,UACAC,aACAC,aACAC,cACAC,cACAC,mBACAC,aACAC,cACAC,SACAC,OACAC,WACAC,YACAC,YACAC,iBACAC,iBACAC,gBACAC,WACAC,QACAC,SACAC,SACAC,aACAC,WACAC,OACAC,SAAAC,aAAO,WACPC,SACGC,aAhCL,+UAoCMC,cACJxB,UAAWyB,UACTC,EAAOC,kBACPpB,GAAUmB,EAAOnB,OACjBV,GAAS6B,EAAO7B,MAChByB,GAAQI,EAAOJ,KACflB,GAAasB,EAAOtB,UACpBN,GAAY4B,EAAO5B,SACV,KAATkB,GAAeU,EAAOE,OACb,KAATZ,GAAeU,EAAOG,OACtB7B,IAECE,GAEL,GAAID,EAAW,CACb,IAAM6B,EAAY7B,EAClB,OACEd,wBAAC2C,gBAAcN,GAAOL,GAAIA,EAAIJ,KAAMA,GAAUQ,GAC3CxB,GAIP,OAAIM,EAIAlB,0CACMqC,gBACQ7B,kBACGD,kBACAD,EACfY,KAAMA,EACNC,GAAIA,EACJS,KAAMA,EACNG,OAAQA,EACRJ,IAAKA,EACLN,QAASA,EACTC,QAASA,EACTC,aAAcA,EACdC,aAAcA,EACdC,YAAaA,EACbC,OAAQA,EACRvB,IAAKA,GACDiC,GAEHxB,GAKLZ,+CACMqC,GACJlB,GAAIA,EACJE,QAASA,EACTC,QAASA,EACTC,aAAcA,EACdC,aAAcA,EACdC,YAAaA,EACbC,OAAQA,EACRQ,KAAMA,EACNlB,SAAUA,EACVY,KAAMA,iBACQxB,kBACCC,kBACAW,kBACAV,kBACAC,eACHC,iBACEC,EACdqB,SAAUA,EACV3B,IAAKA,GACDiC,GAEHxB,MAMTb,EAAU6C,YAAc"}