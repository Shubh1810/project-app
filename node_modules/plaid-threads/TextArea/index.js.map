{"version":3,"file":"index.js","sources":["../../src/TextArea/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport cx from 'classnames';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { InputAlert } from '../BaseInput';\n\nimport baseStyles from '../BaseInput/BaseInput.module.scss';\nimport styles from './TextArea.module.scss';\n\nexport interface Props {\n  className?: Parameters<typeof cx>[0];\n  disabled?: boolean;\n  errorMessage?: string;\n  id: string;\n  label: string;\n  focused?: boolean;\n  placeholder?: string;\n  readOnly?: boolean;\n  value?: string;\n  name?: string;\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  onFocus?: (event: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (event: React.FocusEvent<HTMLTextAreaElement>) => void;\n  required?: boolean;\n  ref?: any; // React doesnt expose a type for this\n  inputRef?: () => void;\n  minRows?: number;\n  maxRows?: number;\n  isDarkMode?: boolean;\n}\nexport const TextArea: FunctionComponent<Props> = ({\n  className,\n  disabled,\n  errorMessage,\n  id,\n  label,\n  focused,\n  name,\n  onChange,\n  onFocus,\n  onBlur,\n  placeholder,\n  readOnly,\n  required,\n  value,\n  ref,\n  inputRef,\n  minRows = 5,\n  maxRows,\n  isDarkMode,\n}) => {\n  const floatLabel = Boolean(value) || focused;\n  const invalid = Boolean(errorMessage);\n  const alertId = `${id}-alert`;\n\n  return (\n    <fieldset\n      className={cx(\n        styles.container,\n        isDarkMode && styles.containerDark,\n        disabled && baseStyles.disabled,\n        className,\n      )}\n    >\n      <label\n        className={cx(\n          baseStyles.label,\n          isDarkMode && baseStyles.labelDark,\n          (floatLabel || placeholder) && [\n            baseStyles.floatLabel,\n            isDarkMode && baseStyles.floatLabelDark,\n          ],\n        )}\n        htmlFor={id}\n      >\n        {label}\n      </label>\n      <TextareaAutosize\n        className={cx(\n          baseStyles.input,\n          value != null && value != '' && baseStyles.hasValue,\n          styles.input,\n          isDarkMode && baseStyles.inputDark,\n          invalid && baseStyles.hasError,\n        )}\n        {...{\n          value,\n          name,\n          onChange,\n          onFocus,\n          onBlur,\n          readOnly,\n          required,\n          ref,\n          inputRef,\n          minRows,\n          maxRows,\n          placeholder,\n        }}\n        id={id}\n        aria-describedby={invalid ? alertId : undefined}\n        aria-invalid={invalid ? 'true' : undefined}\n      />\n      {invalid && (\n        <InputAlert id={alertId} isDarkMode={isDarkMode}>\n          {errorMessage}\n        </InputAlert>\n      )}\n    </fieldset>\n  );\n};\n\nTextArea.displayName = 'TextArea';\n\nexport default TextArea;\nexport { styles };\n"],"names":["TextArea","_a","className","disabled","errorMessage","id","label","focused","name","onChange","onFocus","onBlur","placeholder","readOnly","required","value","ref","inputRef","_b","minRows","maxRows","isDarkMode","floatLabel","Boolean","invalid","alertId","React","cx","styles","container","containerDark","baseStyles","labelDark","floatLabelDark","htmlFor","TextareaAutosize","input","hasValue","inputDark","hasError","undefined","InputAlert","displayName"],"mappings":"m3FA6BaA,EAAqC,SAACC,OACjDC,cACAC,aACAC,iBACAC,OACAC,UACAC,YACAC,SACAC,aACAC,YACAC,WACAC,gBACAC,aACAC,aACAC,UACAC,QACAC,aACAC,YAAAC,aAAU,IACVC,YACAC,eAEMC,EAAaC,QAAQR,IAAUR,EAC/BiB,EAAUD,QAAQnB,GAClBqB,EAAU,UAAGpB,YAEnB,OACEqB,oCACExB,UAAWyB,UACTC,EAAOC,UACPR,GAAcO,EAAOE,cACrB3B,GAAY4B,aAAW5B,SACvBD,IAGFwB,iCACExB,UAAWyB,UACTI,aAAWzB,MACXe,GAAcU,aAAWC,WACxBV,GAAcV,IAAgB,CAC7BmB,aAAWT,WACXD,GAAcU,aAAWE,iBAG7BC,QAAS7B,GAERC,GAEHoB,wBAACS,sBACCjC,UAAWyB,UACTI,aAAWK,MACF,MAATrB,GAA0B,IAATA,GAAegB,aAAWM,SAC3CT,EAAOQ,MACPf,GAAcU,aAAWO,UACzBd,GAAWO,aAAWQ,WAEpB,CACFxB,QACAP,OACAC,WACAC,UACAC,SACAE,WACAC,WACAE,MACAC,WACAE,UACAC,UACAR,gBAEFP,GAAIA,qBACcmB,EAAUC,OAAUe,iBACxBhB,EAAU,YAASgB,KAElChB,GACCE,wBAACe,cAAWpC,GAAIoB,EAASJ,WAAYA,GAClCjB,KAOXJ,EAAS0C,YAAc"}