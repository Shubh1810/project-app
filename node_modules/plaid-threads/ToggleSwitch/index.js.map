{"version":3,"file":"index.js","sources":["../../src/ToggleSwitch/index.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nimport Text from '../Text';\n\nimport baseStyles from '../BaseInput/BaseInput.module.scss';\nimport styles from './ToggleSwitch.module.scss';\n\nexport interface Props {\n  children: React.ReactNode;\n  className?: Parameters<typeof cx>[0];\n  disabled?: boolean;\n  id: string;\n  name?: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  right?: boolean;\n  value: boolean;\n  trueText?: string;\n  falseText?: string;\n}\n\nexport const ToggleSwitch: React.FC<Props> = ({\n  children,\n  className,\n  disabled,\n  id,\n  name,\n  onChange,\n  right,\n  value,\n  trueText,\n  falseText,\n}) => {\n  return (\n    <div\n      className={cx(\n        baseStyles.container,\n        styles.container,\n        disabled && styles.disabled,\n        right && styles.right,\n        className,\n      )}\n    >\n      <input\n        checked={value}\n        className={cx(styles.input)}\n        disabled={disabled}\n        id={id}\n        name={name}\n        onChange={onChange}\n        type='checkbox'\n      />\n      <label className={cx(styles.label, value && styles.checked)} htmlFor={id}>\n        <span role='presentation' className={styles.toggleContainer}>\n          <span className={styles.toggle}>\n            <span className={styles.toggleKnob} />\n          </span>\n          <span className={styles.textWrapper}>\n            <Text as='span' className={cx(!value && styles.hide)}>\n              {trueText || 'ON'}\n            </Text>\n            <Text\n              as='span'\n              className={cx(styles.falseText, value && styles.hide)}\n            >\n              {falseText || 'OFF'}\n            </Text>\n          </span>\n        </span>\n        <Text as='span'>{children}</Text>\n      </label>\n    </div>\n  );\n};\n\nToggleSwitch.displayName = 'ToggleSwitch';\nexport default ToggleSwitch;\nexport { styles };\n"],"names":["ToggleSwitch","_a","children","className","disabled","id","name","onChange","right","value","trueText","falseText","React","cx","baseStyles","container","styles","checked","input","type","label","htmlFor","role","toggleContainer","toggle","toggleKnob","textWrapper","Text","as","hide","displayName"],"mappings":"qzNAqBaA,EAAgC,SAACC,OAC5CC,aACAC,cACAC,aACAC,OACAC,SACAC,aACAC,UACAC,UACAC,aACAC,cAEA,OACEC,+BACET,UAAWU,UACTC,aAAWC,UACXC,EAAOD,UACPX,GAAYY,EAAOZ,SACnBI,GAASQ,EAAOR,MAChBL,IAGFS,iCACEK,QAASR,EACTN,UAAWU,UAAGG,EAAOE,OACrBd,SAAUA,EACVC,GAAIA,EACJC,KAAMA,EACNC,SAAUA,EACVY,KAAK,aAEPP,iCAAOT,UAAWU,UAAGG,EAAOI,MAAOX,GAASO,EAAOC,SAAUI,QAAShB,GACpEO,gCAAMU,KAAK,eAAenB,UAAWa,EAAOO,iBAC1CX,gCAAMT,UAAWa,EAAOQ,QACtBZ,gCAAMT,UAAWa,EAAOS,cAE1Bb,gCAAMT,UAAWa,EAAOU,aACtBd,wBAACe,QAAKC,GAAG,OAAOzB,UAAWU,WAAIJ,GAASO,EAAOa,OAC5CnB,GAAY,MAEfE,wBAACe,QACCC,GAAG,OACHzB,UAAWU,UAAGG,EAAOL,UAAWF,GAASO,EAAOa,OAE/ClB,GAAa,SAIpBC,wBAACe,QAAKC,GAAG,QAAQ1B,MAMzBF,EAAa8B,YAAc"}