{"version":3,"file":"index.js","sources":["../../src/Tabs/index.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nimport useUniqueId from '../utils/useUniqueId';\nimport Touchable from '../Touchable';\nimport Text from '../Text';\n\nimport styles from './Tabs.module.scss';\n\nexport interface Props {\n  children: React.ReactElement<TabProps> | Array<React.ReactElement<TabProps>>;\n  className?: Parameters<typeof cx>[0];\n  fixed?: boolean;\n  onChange?: (idx: number) => void;\n  selectedIndex?: number;\n}\n\nexport const Tabs: React.FC<Props> = ({\n  children,\n  className,\n  fixed,\n  onChange,\n  selectedIndex,\n}) => {\n  // component can be a controlled component or can be stateful under the hood\n  const isControlledComponent = onChange != null && selectedIndex != null;\n\n  const [internalSelectedIndex, setInternalSelectedIndex] = React.useState(\n    selectedIndex || 0,\n  );\n  const tabControls: Array<React.ReactElement> = [];\n  const tabControlRefs = React.useRef<Array<HTMLButtonElement | null>>([]);\n  const tabPanels: Array<React.ReactElement> = [];\n  // a unique ID to use as a base for building IDs for each tab and panel\n  const uniqueIdBase = useUniqueId('tabs');\n  // allow component to be controlled component\n  React.useEffect(() => {\n    if (selectedIndex != null) {\n      setInternalSelectedIndex(selectedIndex);\n    }\n  }, [selectedIndex]);\n\n  // a11y keyboard controls\n  const keys = {\n    end: 35,\n    home: 36,\n    left: 37,\n    right: 39,\n  };\n\n  const handleOnChange = React.useCallback(\n    (newIdx: number, focus?: boolean) => {\n      if (newIdx > tabControls.length - 1) {\n        newIdx = 0;\n      }\n      if (newIdx < 0) {\n        newIdx = tabControls.length - 1;\n      }\n      if (onChange != null) {\n        onChange(newIdx);\n      }\n      // focus controls if navigating via keyboard\n      if (focus && tabControlRefs.current[newIdx] != null) {\n        tabControlRefs.current[newIdx]!.focus();\n      }\n      setInternalSelectedIndex(newIdx);\n    },\n    [setInternalSelectedIndex, onChange, tabControls.length],\n  );\n\n  // Handle keydown on tabs\n  const keydownEventListener = React.useCallback(\n    (event: KeyboardEvent) => {\n      var key = event.keyCode;\n\n      switch (key) {\n        case keys.end:\n          event.preventDefault();\n          handleOnChange(tabControls.length - 1, true);\n          break;\n        case keys.home:\n          event.preventDefault();\n          handleOnChange(0, true);\n          break;\n      }\n    },\n    [handleOnChange, keys, tabControls.length],\n  );\n\n  // Handle keyup on tabs\n  const keyupEventListener = React.useCallback(\n    (event: KeyboardEvent) => {\n      let newIdx = internalSelectedIndex;\n\n      switch (event.keyCode) {\n        case keys.left:\n          newIdx = internalSelectedIndex - 1;\n          break;\n        case keys.right:\n          newIdx = internalSelectedIndex + 1;\n          break;\n        default:\n          return;\n      }\n      handleOnChange(newIdx, true);\n    },\n    [internalSelectedIndex, keys, handleOnChange],\n  );\n\n  // Add key event listeners to tab controls\n  React.useEffect(() => {\n    tabControlRefs.current.forEach(ref => {\n      if (ref == null) {\n        return;\n      }\n      ref.addEventListener('keydown', keydownEventListener);\n      ref.addEventListener('keyup', keyupEventListener);\n    });\n\n    // make a copy of refs to satisfy react-hooks/exhaustive-deps\n    const refsForCleanup = tabControlRefs.current;\n\n    // clean up event listeners\n    return () => {\n      refsForCleanup.forEach(ref => {\n        if (ref == null) {\n          return;\n        }\n        ref.removeEventListener('keydown', keydownEventListener);\n        ref.removeEventListener('keyup', keyupEventListener);\n      });\n    };\n  }, [\n    tabControlRefs,\n    internalSelectedIndex,\n    keyupEventListener,\n    keydownEventListener,\n  ]);\n\n  // due to the rules of hooks, we loop imperatively here so we can generate a\n  // single unique id for use in both the tab control and panel elements\n  React.Children.forEach(children, (child, idx) => {\n    if (!React.isValidElement<TabProps>(child)) {\n      return;\n    }\n    const isSelected =\n      (isControlledComponent ? selectedIndex : internalSelectedIndex) === idx;\n    // e.g. tabs-unique-id-0-0\n    const id = child.props.id || `${uniqueIdBase}-${idx}`;\n    // e.g. tabs-unique-id-0-0-panel\n    const panelId = `${id}-panel`;\n\n    tabControls.push(\n      <Touchable\n        ref={(el: HTMLButtonElement) => {\n          tabControlRefs.current[idx] = el;\n        }}\n        id={id}\n        role='tab'\n        key={id}\n        className={cx(\n          styles.tab,\n          isSelected && styles.isSelected,\n          child.props.className,\n        )}\n        aria-selected={isSelected}\n        aria-controls={panelId}\n        tabIndex={isSelected ? undefined : -1}\n        onClick={() => handleOnChange(idx)}\n      >\n        <Text\n          as='span'\n          weight='semiBold'\n          contrast='high'\n          className={styles.text}\n        >\n          {child.props.title}\n        </Text>\n      </Touchable>,\n    );\n\n    tabPanels.push(\n      <div\n        id={panelId}\n        className={cx(child.props.contentClassName)}\n        hidden={!isSelected}\n        role='tabpanel'\n        key={panelId}\n        aria-labelledby={id}\n        // Disabling the a11y linter here is OK according to both the linter docs and w3 example\n        // https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-noninteractive-tabindex.md#rule-details\n        // https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-1/tabs.html#sc1_label\n        //\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex={0}\n      >\n        {child.props.children}\n      </div>,\n    );\n  });\n\n  return (\n    <div className={cx(className)}>\n      <div className={cx(styles.tabList, fixed && styles.fixed)} role='tablist'>\n        {tabControls}\n      </div>\n      {tabPanels}\n    </div>\n  );\n};\n\nexport interface TabProps {\n  children: React.ReactNode;\n  contentClassName?: Parameters<typeof cx>[0];\n  className?: Parameters<typeof cx>[0];\n  title: string;\n  id?: string;\n}\n\nexport const Tab: React.FC<TabProps> = ({ children, contentClassName }) => (\n  <div className={cx(contentClassName)}>{children}</div>\n);\n\nTabs.displayName = 'Tabs';\nexport default Tabs;\nexport { styles };\n"],"names":["Tabs","_a","children","className","fixed","onChange","selectedIndex","isControlledComponent","_b","React","useState","internalSelectedIndex","setInternalSelectedIndex","tabControls","tabControlRefs","useRef","tabPanels","uniqueIdBase","useUniqueId","useEffect","keys","end","home","left","right","handleOnChange","useCallback","newIdx","focus","length","current","keydownEventListener","event","keyCode","preventDefault","keyupEventListener","forEach","ref","addEventListener","refsForCleanup","removeEventListener","Children","child","idx","isValidElement","isSelected","id","props","panelId","push","Touchable","el","role","key","cx","styles","tab","tabIndex","undefined","onClick","Text","as","weight","contrast","text","title","contentClassName","hidden","tabList","displayName"],"mappings":"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"}