{"version":3,"file":"index.js","sources":["../../src/Note/index.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nimport Information from '../Icons/Information';\nimport Checkmark from '../Icons/Checkmark';\nimport AlertWarning from '../Icons/AlertWarning';\nimport AlertError from '../Icons/AlertError';\n\nimport styles from './Note.module.scss';\n\nexport interface Props {\n  /** Status indicator: A generic message or info item. Alias for the deprecated 'info' prop */\n  attention?: boolean;\n  /** Text and other (non-icon) content for the Note */\n  children?: React.ReactNode;\n  /** CSS class name(s) to apply to the Note */\n  className?: Parameters<typeof cx>[0];\n  /** Status indicator: An error or other important mishap */\n  error?: boolean;\n  /** Enables a wider min-width (2x the default) */\n  fixed?: boolean;\n  /** An icon to display (overrides the default status icon for whichever status indicator is enabled) */\n  icon?: React.ReactNode;\n  /** DEPRECATED: Use (and see description of) `attention` instead */\n  info?: boolean;\n  /** Height (in pixels) of the desired Note display. If no text is present (an empty Note), this measurement controls\n   *  the width as well.\n   */\n  size?: 20 | 24 | 32;\n  /** DEPRECATED: Use `size={24}` instead */\n  small?: boolean;\n  /** Whether or not to fill the Note with a background color */\n  solid?: boolean;\n  /** Status indicator: A process or task has finished successfully */\n  success?: boolean;\n  /** Status indicator: Something that needs attention or something may be wrong */\n  warning?: boolean;\n  /** Hide or show icon that appears before the content. */\n  hasIcon?: boolean;\n}\n\nexport const Note: React.FC<Props> = ({\n  attention,\n  children,\n  className,\n  error,\n  fixed,\n  icon,\n  info, // DEPRECATED: use 'attention'\n  size = 32,\n  small,\n  solid,\n  success,\n  warning,\n  hasIcon = true,\n}) => {\n  let statusIcon = null;\n  let statusClassName = null;\n\n  switch (true) {\n    case error:\n      statusIcon = <AlertError className={styles.statusIcon} />;\n      statusClassName = styles.error;\n      break;\n    case info:\n    case attention:\n      statusIcon = <Information className={styles.statusIcon} />;\n      statusClassName = styles.attention;\n      break;\n    case success:\n      statusIcon = <Checkmark className={styles.statusIcon} />;\n      statusClassName = styles.success;\n      break;\n    case warning:\n      statusIcon = <AlertWarning className={styles.statusIcon} />;\n      statusClassName = styles.warning;\n  }\n\n  const withIcon = (icon && React.isValidElement(icon)) || statusIcon;\n\n  return (\n    <span\n      role='note'\n      className={cx(\n        statusClassName,\n        fixed && styles.fixed,\n        (size === 24 || small) && styles.small,\n        size === 20 && styles.xsmall,\n        !children && styles.badge,\n        solid && styles.solid,\n        hasIcon && statusIcon && styles.withIcon,\n        styles.note,\n        className,\n      )}\n    >\n      {hasIcon && withIcon && (\n        <div className={cx(styles.iconWrapper)}>\n          {icon\n            ? React.cloneElement(icon as React.ReactElement, {\n                className: cx(styles.statusIcon),\n              })\n            : statusIcon\n            ? statusIcon\n            : null}\n        </div>\n      )}\n      {children}\n    </span>\n  );\n};\n\nNote.displayName = 'Note';\nexport default Note;\nexport { styles };\n"],"names":["Note","_a","attention","children","className","error","fixed","icon","info","_b","size","small","solid","success","warning","_c","hasIcon","statusIcon","statusClassName","React","AlertError","styles","Information","Checkmark","AlertWarning","withIcon","isValidElement","role","cx","xsmall","badge","note","iconWrapper","cloneElement","displayName"],"mappings":"2hJAyCaA,EAAwB,SAACC,OACpCC,cACAC,aACAC,cACAC,UACAC,UACAC,SACAC,SACAC,SAAAC,aAAO,KACPC,UACAC,UACAC,YACAC,YACAC,YAAAC,gBAEIC,EAAa,KACbC,EAAkB,KAEtB,QAAQ,GACN,KAAKb,EACHY,EAAaE,wBAACC,cAAWhB,UAAWiB,EAAOJ,aAC3CC,EAAkBG,EAAOhB,MACzB,MACF,KAAKG,EACL,KAAKN,EACHe,EAAaE,wBAACG,eAAYlB,UAAWiB,EAAOJ,aAC5CC,EAAkBG,EAAOnB,UACzB,MACF,KAAKW,EACHI,EAAaE,wBAACI,aAAUnB,UAAWiB,EAAOJ,aAC1CC,EAAkBG,EAAOR,QACzB,MACF,KAAKC,EACHG,EAAaE,wBAACK,gBAAapB,UAAWiB,EAAOJ,aAC7CC,EAAkBG,EAAOP,QAG7B,IAAMW,EAAYlB,GAAQY,UAAMO,eAAenB,IAAUU,EAEzD,OACEE,gCACEQ,KAAK,OACLvB,UAAWwB,UACTV,EACAZ,GAASe,EAAOf,OACN,KAATI,GAAeC,IAAUU,EAAOV,MACxB,KAATD,GAAeW,EAAOQ,QACrB1B,GAAYkB,EAAOS,MACpBlB,GAASS,EAAOT,MAChBI,GAAWC,GAAcI,EAAOI,SAChCJ,EAAOU,KACP3B,IAGDY,GAAWS,GACVN,+BAAKf,UAAWwB,UAAGP,EAAOW,cACvBzB,EACGY,UAAMc,aAAa1B,EAA4B,CAC7CH,UAAWwB,UAAGP,EAAOJ,cAEvBA,GAEA,MAGPd,IAKPH,EAAKkC,YAAc"}