"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("../_tslib-63a8c591.js"),n=require("react"),o=require("classnames"),t=require("../Touchable/index.js"),a=require("../styleInject-c3042c68.js"),s=require("../Tooltip/index.js");function l(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("react-popper");var r=l(n),i=l(o),c={_getCss:function(){return u},container:"IconButton-module_container__1eWks",icon:"IconButton-module_icon__1P_d0"},u='@charset "UTF-8";\n/*\n * \n * ðŸš§ THIS FILE HAS BEEN DEPRECATED ðŸš§\n * \n * We are migrating from Sass variables to CSS Custom Properties (aka CSS variables: https: //developer.mozilla.org/en-US/docs/Web/CSS/--*).\n * This file will be in maintenance mode until the migration is complete and will remove after that. \n * \n * Please use the color tokens found in _tokens.scss.\n * \n * If there are any questions, reach out to us in #threads-open slack channel.\n * \n */\n.IconButton-module_container__1eWks {\n  align-items: center;\n  display: flex;\n  height: 2.4rem;\n  transition: color ease-in-out 100ms;\n}\n.IconButton-module_container__1eWks:not(:disabled) .IconButton-module_icon__1P_d0 {\n  color: var(--color-fill-state-default);\n}\n.IconButton-module_container__1eWks:not(:disabled):hover .IconButton-module_icon__1P_d0 {\n  color: var(--color-fill-state-hover);\n}\n.IconButton-module_container__1eWks:not(:disabled):active .IconButton-module_icon__1P_d0 {\n  color: var(--color-fill-state-pressed);\n}\n.IconButton-module_container__1eWks:disabled:hover .IconButton-module_icon__1P_d0 {\n  cursor: not-allowed;\n}';a.styleInject(u);var d=function(n){var o=n.accessibilityLabel,a=n.tooltipText,l=n.className,u=n.wrapperClassName,d=n.iconClassName,_=n.icon,m=e.__rest(n,["accessibilityLabel","tooltipText","className","wrapperClassName","iconClassName","icon"]),p="function"==typeof matchMedia&&matchMedia("(hover: none)").matches;return r.default.createElement(s.Tooltip,{dark:!0,placement:"top",showOn:p?"disabled":["hover","focus"],small:!0,target:r.default.createElement(t.Touchable,e.__assign({ariaLabel:o,className:i.default(c.container,l)},m),r.default.cloneElement(_,{className:i.default(c.icon,d)})),wrapperClassName:u},a||o)};d.displayName="IconButton",exports.IconButton=d,exports.default=d,exports.styles=c;
//# sourceMappingURL=index.js.map
