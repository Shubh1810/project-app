{"version":3,"file":"index.js","sources":["../../src/Accordion/AccordionGroup.tsx","../../src/Accordion/index.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nimport { AccordionProps } from '.';\n\nexport interface AccordionGroupProps {\n  /** Child of `Accordion.Group` which should be one or more `Accordion.Item`. */\n  children:\n    | React.ReactElement<AccordionProps>\n    | React.ReactElement<AccordionProps>[];\n  /** Apply CSS className for `Accordion.Group` container. */\n  className?: Parameters<typeof cx>[0];\n}\n\nexport interface AccordionComposite {\n  Group: React.FC<AccordionGroupProps>;\n  Item: React.FC<AccordionProps>;\n}\n\nexport const AccordionGroup: React.FC<AccordionGroupProps> = ({\n  children,\n  className,\n}) => {\n  return (\n    <div className={cx(className)}>\n      {/* Pass down the index value to the `Accordion.Item` */}\n      {React.Children.map(children, (child, index) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child, {\n            itemIndex: index,\n          });\n        }\n        return null;\n      })}\n    </div>\n  );\n};\n\nAccordionGroup.displayName = 'AccordionGroup';\n\nexport default AccordionGroup;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport Touchable from '../Touchable';\nimport Text from '../Text';\nimport ChevronDownS1 from '../Icons/ChevronDownS1';\nimport ChevronUpS1 from '../Icons/ChevronUpS1';\nimport AccordionGroup, { AccordionGroupProps } from './AccordionGroup';\n\nimport { useUniqueId } from '../utils';\n\nimport styles from './Accordion.module.scss';\n\nexport interface AccordionProps {\n  /** Child of `Accordion.Item`. */\n  children?: React.ReactNode;\n  /** Apply CSS className for `Accordion.Item` container. */\n  className?: Parameters<typeof cx>[0];\n  /** Visible name of the `Accordion.Item`. */\n  label: string | React.ReactNode;\n  /** If true, `Accordion.Item` is expanded. */\n  isExpanded: boolean;\n  /**\tFunction that will be called when the `Accordion.Item` is clicked. */\n  onChange: () => void;\n}\n\nexport interface AccordionComposite {\n  Group: React.FC<AccordionGroupProps>;\n  Item: React.FC<AccordionProps>;\n}\n\nexport const Accordion: React.FC<AccordionProps> & AccordionComposite = ({\n  children,\n  className,\n  label,\n  isExpanded,\n  onChange,\n}) => {\n  const id = useUniqueId('accordion');\n\n  return (\n    <div className={cx(styles.accordionItem, className)}>\n      <Touchable\n        className={styles.accordionButton}\n        aria-expanded={isExpanded}\n        ariaControls={`${id}-panel`}\n        onClick={onChange}\n      >\n        {typeof label === 'string' ? (\n          <Text\n            id={`${id}-label`}\n            size={16}\n            weight='semiBold'\n            className={styles.text}\n          >\n            {label}\n          </Text>\n        ) : (\n          label\n        )}\n        <div className={styles.iconGroup}>\n          {isExpanded ? (\n            <ChevronUpS1 className={styles.icon} />\n          ) : (\n            <ChevronDownS1 className={styles.icon} />\n          )}\n        </div>\n      </Touchable>\n      {isExpanded && (\n        <div\n          id={`${id}-panel`}\n          aria-labelledby={`${id}-label`}\n          className={styles.panel}\n        >\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n\nAccordion.Item = Accordion;\nAccordion.Group = AccordionGroup;\n\nexport default Accordion;\nexport { styles };\n"],"names":["AccordionGroup","_a","children","className","React","cx","Children","map","child","index","isValidElement","cloneElement","itemIndex","displayName","Accordion","label","isExpanded","onChange","id","useUniqueId","styles","accordionItem","Touchable","accordionButton","ariaControls","onClick","Text","size","weight","text","iconGroup","ChevronUpS1","icon","ChevronDownS1","panel","Item","Group"],"mappings":"mpBAmBaA,EAAgD,SAACC,OAC5DC,aACAC,cAEA,OACEC,+BAAKD,UAAWE,UAAGF,IAEhBC,UAAME,SAASC,IAAIL,GAAU,SAACM,EAAOC,GACpC,OAAIL,UAAMM,eAAeF,GAChBJ,UAAMO,aAAaH,EAAO,CAC/BI,UAAWH,IAGR,UAMfT,EAAea,YAAc,iiECPhBC,EAA2D,SAACb,OACvEC,aACAC,cACAY,UACAC,eACAC,aAEMC,EAAKC,cAAY,aAEvB,OACEf,+BAAKD,UAAWE,UAAGe,EAAOC,cAAelB,IACvCC,wBAACkB,aACCnB,UAAWiB,EAAOG,gCACHP,EACfQ,aAAc,UAAGN,YACjBO,QAASR,GAES,iBAAVF,EACNX,wBAACsB,QACCR,GAAI,UAAGA,YACPS,KAAM,GACNC,OAAO,WACPzB,UAAWiB,EAAOS,MAEjBd,KAKLX,+BAAKD,UAAWiB,EAAOU,WACpBd,EACCZ,wBAAC2B,eAAY5B,UAAWiB,EAAOY,OAE/B5B,wBAAC6B,iBAAc9B,UAAWiB,EAAOY,SAItChB,GACCZ,+BACEc,GAAI,UAAGA,8BACU,UAAGA,YACpBf,UAAWiB,EAAOc,OAEjBhC,KAOXY,EAAUqB,KAAOrB,EACjBA,EAAUsB,MAAQpC"}