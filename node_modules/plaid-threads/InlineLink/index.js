"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("../_tslib-63a8c591.js"),n=require("react"),i=require("classnames"),t=require("../Text/index.js"),l=require("../Touchable/index.js"),a=require("../styleInject-c3042c68.js");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("../capitalize-072b3373.js"),require("../outputMarginClasses-4fd0efe5.js"),require("../useBreakpoints-bac94a72.js"),require("../_utils-ce7d5c2f.js");var s=r(n),o=r(i),u={_getCss:function(){return c},inlinelink:"InlineLink-module_inlinelink__3SEIo",text:"InlineLink-module_text__3pIL1"},c='@charset "UTF-8";\n/*\n * \n * ðŸš§ THIS FILE HAS BEEN DEPRECATED ðŸš§\n * \n * We are migrating from Sass variables to CSS Custom Properties (aka CSS variables: https: //developer.mozilla.org/en-US/docs/Web/CSS/--*).\n * This file will be in maintenance mode until the migration is complete and will remove after that. \n * \n * Please use the color tokens found in _tokens.scss.\n * \n * If there are any questions, reach out to us in #threads-open slack channel.\n * \n */\n.InlineLink-module_inlinelink__3SEIo {\n  color: var(--color-text-high-contrast);\n  transition: color ease-in-out 100ms;\n  position: relative;\n  display: inline;\n  line-height: 2.4rem;\n}\n.InlineLink-module_inlinelink__3SEIo .InlineLink-module_text__3pIL1 {\n  transition: box-shadow ease-in-out 100ms;\n  box-shadow: 0 1px transparent, 0 1px var(--color-fill-default);\n}\n.InlineLink-module_inlinelink__3SEIo:hover {\n  color: var(--color-text-state-hover);\n}\n.InlineLink-module_inlinelink__3SEIo:hover .InlineLink-module_text__3pIL1 {\n  box-shadow: 0 1px transparent, 0 1px rgba(0, 0, 0, 0);\n}\n.InlineLink-module_inlinelink__3SEIo:active {\n  color: var(--color-text-state-hover);\n}';a.styleInject(c);var _=function(n){var i=n.children,a=n.className,r=n.textClassName,c=e.__rest(n,["children","className","textClassName"]);return s.default.createElement(l.Touchable,e.__assign({},c,{className:o.default(u.inlinelink,a)}),s.default.createElement(t.Text,{as:"span",className:o.default(u.text,r)},i))};_.displayName="InlineLink",exports.InlineLink=_,exports.default=_,exports.styles=u;
//# sourceMappingURL=index.js.map
