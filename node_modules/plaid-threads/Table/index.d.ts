import React from 'react';
import cx from 'classnames';
import { TableHeadProps } from './TableHead';
import { TableHeadCellProps } from './TableHeadCell';
import { TableBodyProps } from './TableBody';
import { TableRowProps } from './TableRow';
import { TableCellProps } from './TableCell';
import { TableRowExpandedProps } from './TableRowExpanded';
import { TableExpandedGroupProps } from './TableExpandedGroup';
import { TableExpandedListProps } from './TableExpandedList';
import styles from './Table.module.scss';
export interface TableComposition {
    Head: React.FC<TableHeadProps>;
    HeadCell: React.FC<TableHeadCellProps>;
    Body: React.FC<TableBodyProps>;
    Row: React.FC<TableRowProps>;
    Cell: React.FC<TableCellProps>;
    RowExpanded: React.FC<TableRowExpandedProps>;
    ExpandedGroup: React.FC<TableExpandedGroupProps>;
    ExpandedList: React.FC<TableExpandedListProps>;
}
export interface Props extends Omit<React.HTMLProps<HTMLTableElement>, 'className'> {
    /** Value of table which should be a Table.Head and Table.Body.*/
    children: [
        React.ReactElement<TableHeadProps>,
        React.ReactElement<TableBodyProps>
    ];
    /** Accessible name for the Table, which will be visually hidden by default. */
    label: string;
    /** Override table styles by adding a className */
    className?: Parameters<typeof cx>[0];
}
export declare const Table: React.FC<Props> & TableComposition;
export default Table;
export { styles };
//# sourceMappingURL=index.d.ts.map