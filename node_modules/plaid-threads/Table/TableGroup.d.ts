import React from 'react';
import { Column, CellProps, Row } from 'react-table';
import cx from 'classnames';
import styles from './TableGroup.module.scss';
export interface Props {
    /** Headers rendered within the table. */
    columns: Array<Column>;
    /** Accessible name for the Table, which will be visually hidden by default. */
    label: string;
    /** Data rendered within the table. */
    rows: Array<Row>;
    /** Call to action section that is typically an `IconButton` which would be appended at the end of row. */
    actions?: (getAllTableProps: React.PropsWithChildren<CellProps<object>>) => JSX.Element | undefined;
    /** Override table styles by adding a className. */
    className?: Parameters<typeof cx>[0];
    /** If true, the generic error state will appear. */
    isError?: boolean;
    /** If true, a loading spinner will appear and the table will not be interactive. */
    isLoading?: boolean;
    /** The value will render checkboxes and/or row expand toggle. */
    type?: 'default' | 'selectable' | 'expandable' | 'selectable-expandable';
    /** Content to be rendered in expanded row.  */
    expandedRow?: (row: Row<object>) => React.ReactNode;
}
export declare const TableGroup: React.FC<Props>;
export default TableGroup;
export { styles };
//# sourceMappingURL=TableGroup.d.ts.map