import React, { ChangeEvent } from 'react';
import styles from './SearchInput.module.scss';
export interface Props {
    /** CSS classname to apply to the SearchInput container div */
    className?: string;
    /** Label text for the search text input */
    label: string;
    /** Loading state when trying to categorize/label a search query (as seen in Dashboard) */
    isLoadingQueryLabelText?: boolean;
    /** Used to show whether or not the current query label is valid for the current search query value (as seen in Dashboard) */
    isQueryLabelValid?: boolean;
    /** The label (<Note /> component) to use for the current query (if applicable) */
    queryLabelText?: string;
    /** Boolean to indicate when the form values are currently being submitted */
    submitting?: boolean;
    /** Value of the input, aka the 'search term' */
    value: string;
    /** Custom id for SearchInput */
    id?: string;
    /** Custom placeholder text for SearchInput */
    placeholder?: string;
    /** Handler to use when the input value changes */
    onChange: (e: ChangeEvent<HTMLInputElement>) => void;
    /** Handler for when the search is submitted */
    onSubmit: (query: string) => void;
}
export declare const SearchInput: React.FC<Props>;
export default SearchInput;
export { styles };
//# sourceMappingURL=index.d.ts.map