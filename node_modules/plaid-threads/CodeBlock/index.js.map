{"version":3,"file":"index.js","sources":["../../src/CodeBlock/index.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport cx from 'classnames';\n\nimport BookOpen from '../Icons/BookOpen';\nimport Checkmark from '../Icons/Checkmark';\nimport ChevronS2Down from '../Icons/ChevronS2Down';\nimport Copy from '../Icons/Copy';\nimport IconButton from '../IconButton';\nimport Dropdown, { DropdownItem } from '../Dropdown';\nimport { codeBlockLineHeight } from '../constants';\n\nimport styles from './CodeBlock.module.scss';\n\nexport interface Props {\n  children?: React.ReactNode;\n  className?: Parameters<typeof cx>[0];\n  code: string | null; // code can be null if children is passed\n  isCopying?: boolean;\n  wrap?: boolean;\n  showLineStart?: number;\n  onClick?: () => void;\n  title?: string;\n  dropdown?: {\n    accessibilityLabel: string;\n    isOpen: boolean;\n    onChange: (v: DropdownItem) => void;\n    onClick: () => void;\n    onEscape?: () => void;\n    options: Array<DropdownItem>;\n    text: string;\n    value: DropdownItem;\n  };\n  referenceLink?: {\n    href: string;\n    accessibilityLabel: string;\n  };\n}\n\nexport const CodeBlock: React.FC<Props> = ({\n  children,\n  className,\n  code,\n  dropdown,\n  isCopying,\n  wrap,\n  onClick,\n  title,\n  referenceLink,\n  showLineStart,\n}) => {\n  const containerRef = React.useRef<null | HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (showLineStart != null && containerRef?.current != null) {\n      containerRef.current.scrollTo({\n        left: 0,\n        top: codeBlockLineHeight * showLineStart - codeBlockLineHeight,\n        behavior: 'smooth',\n      });\n    }\n  }, [showLineStart, containerRef]);\n\n  const tabIndex =\n    containerRef?.current != null &&\n    (containerRef.current.scrollHeight > containerRef.current.clientHeight ||\n      containerRef.current.scrollWidth > containerRef.current.clientWidth)\n      ? 0\n      : undefined;\n\n  return (\n    <div className={cx(styles.wrapper, className)} role='group'>\n      {(title || onClick) && (\n        <div className={styles.header}>\n          <label className={styles.title}>{title}</label>\n          <div className={styles.buttonWrapper}>\n            {dropdown && (\n              <Dropdown\n                wrapperClassName={styles.dropdown}\n                isOpen={dropdown.isOpen}\n                options={dropdown.options}\n                onChange={dropdown.onChange}\n                onEscape={dropdown.onEscape}\n                value={dropdown.value}\n                target={\n                  <IconButton\n                    className={styles.button}\n                    accessibilityLabel={\n                      dropdown.accessibilityLabel || `Select ${dropdown.text}`\n                    }\n                    onClick={dropdown.onClick}\n                    icon={\n                      <>\n                        <span className={styles.dropdownText}>\n                          {dropdown.text}\n                        </span>\n                        <ChevronS2Down />\n                      </>\n                    }\n                  />\n                }\n              />\n            )}\n\n            {referenceLink && (\n              <IconButton\n                className={cx(styles.button, styles.buttonIcon)}\n                accessibilityLabel={referenceLink.accessibilityLabel}\n                href={referenceLink.href}\n                icon={\n                  <span className={styles.iconWrapper}>\n                    <BookOpen />\n                  </span>\n                }\n              />\n            )}\n            {onClick && (\n              <IconButton\n                className={cx(\n                  styles.button,\n                  styles.buttonIcon,\n                  isCopying && styles.buttonActive,\n                )}\n                accessibilityLabel={isCopying ? 'Copied' : 'Copy'}\n                onClick={onClick}\n                icon={\n                  <>\n                    <span className={styles.iconWrapper}>\n                      <Copy\n                        className={cx(\n                          styles.iconCopy,\n                          isCopying && styles.active,\n                        )}\n                      />\n                      <Checkmark\n                        className={cx(\n                          styles.iconCheckmark,\n                          isCopying && styles.active,\n                        )}\n                      />\n                    </span>\n                  </>\n                }\n              />\n            )}\n          </div>\n        </div>\n      )}\n\n      <div\n        className={styles.scrollContainer}\n        ref={containerRef}\n        data-id='scroll-container'\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex={tabIndex}\n      >\n        {children != null ? (\n          children\n        ) : (\n          <pre className={cx(styles.pre, wrap ? styles.wrap : styles.noWrap)}>\n            <code className={cx(styles.code)}>{code}</code>\n          </pre>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCodeBlock.displayName = 'CodeBlock';\nexport default CodeBlock;\nexport { styles };\n"],"names":["CodeBlock","_a","children","className","code","dropdown","isCopying","wrap","onClick","title","referenceLink","showLineStart","containerRef","React","useRef","useEffect","current","scrollTo","left","top","codeBlockLineHeight","behavior","tabIndex","scrollHeight","clientHeight","scrollWidth","clientWidth","undefined","cx","styles","wrapper","role","header","buttonWrapper","Dropdown","wrapperClassName","isOpen","options","onChange","onEscape","value","target","IconButton","button","accessibilityLabel","text","icon","dropdownText","ChevronS2Down","buttonIcon","href","iconWrapper","BookOpen","buttonActive","Copy","iconCopy","active","Checkmark","iconCheckmark","scrollContainer","ref","pre","noWrap","displayName"],"mappings":"yqMAsCaA,EAA6B,SAACC,OACzCC,aACAC,cACAC,SACAC,aACAC,cACAC,SACAC,YACAC,UACAC,kBACAC,kBAEMC,EAAeC,UAAMC,OAA8B,MAEzDC,aAAU,WACa,MAAjBJ,GAAkD,OAAzBC,MAAAA,SAAAA,EAAcI,UACzCJ,EAAaI,QAAQC,SAAS,CAC5BC,KAAM,EACNC,IAAKC,sBAAsBT,EAAgBS,sBAC3CC,SAAU,aAGb,CAACV,EAAeC,IAEnB,IAAMU,EACqB,OAAzBV,MAAAA,SAAAA,EAAcI,WACbJ,EAAaI,QAAQO,aAAeX,EAAaI,QAAQQ,cACxDZ,EAAaI,QAAQS,YAAcb,EAAaI,QAAQU,aACtD,OACAC,EAEN,OACEd,+BAAKV,UAAWyB,UAAGC,EAAOC,QAAS3B,GAAY4B,KAAK,UAChDtB,GAASD,IACTK,+BAAKV,UAAW0B,EAAOG,QACrBnB,iCAAOV,UAAW0B,EAAOpB,OAAQA,GACjCI,+BAAKV,UAAW0B,EAAOI,eACpB5B,GACCQ,wBAACqB,YACCC,iBAAkBN,EAAOxB,SACzB+B,OAAQ/B,EAAS+B,OACjBC,QAAShC,EAASgC,QAClBC,SAAUjC,EAASiC,SACnBC,SAAUlC,EAASkC,SACnBC,MAAOnC,EAASmC,MAChBC,OACE5B,wBAAC6B,cACCvC,UAAW0B,EAAOc,OAClBC,mBACEvC,EAASuC,oBAAsB,iBAAUvC,EAASwC,MAEpDrC,QAASH,EAASG,QAClBsC,KACEjC,gDACEA,gCAAMV,UAAW0B,EAAOkB,cACrB1C,EAASwC,MAEZhC,wBAACmC,2BAQZtC,GACCG,wBAAC6B,cACCvC,UAAWyB,UAAGC,EAAOc,OAAQd,EAAOoB,YACpCL,mBAAoBlC,EAAckC,mBAClCM,KAAMxC,EAAcwC,KACpBJ,KACEjC,gCAAMV,UAAW0B,EAAOsB,aACtBtC,wBAACuC,oBAKR5C,GACCK,wBAAC6B,cACCvC,UAAWyB,UACTC,EAAOc,OACPd,EAAOoB,WACP3C,GAAauB,EAAOwB,cAEtBT,mBAAoBtC,EAAY,SAAW,OAC3CE,QAASA,EACTsC,KACEjC,gDACEA,gCAAMV,UAAW0B,EAAOsB,aACtBtC,wBAACyC,QACCnD,UAAWyB,UACTC,EAAO0B,SACPjD,GAAauB,EAAO2B,UAGxB3C,wBAAC4C,aACCtD,UAAWyB,UACTC,EAAO6B,cACPpD,GAAauB,EAAO2B,gBAYxC3C,+BACEV,UAAW0B,EAAO8B,gBAClBC,IAAKhD,YACG,mBAERU,SAAUA,GAEG,MAAZpB,IAGCW,+BAAKV,UAAWyB,UAAGC,EAAOgC,IAAKtD,EAAOsB,EAAOtB,KAAOsB,EAAOiC,SACzDjD,gCAAMV,UAAWyB,UAAGC,EAAOzB,OAAQA,OAQ/CJ,EAAU+D,YAAc"}