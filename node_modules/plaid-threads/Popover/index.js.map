{"version":3,"file":"index.js","sources":["../../src/Popover/PopoverBody.tsx","../../src/Popover/PopoverFooter.tsx","../../src/Popover/index.tsx","../../src/Popover/PopoverHeader.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nimport styles from './PopoverBody.module.scss';\n\nexport interface PopoverBodyProps {\n  children?: React.ReactNode;\n  className?: Parameters<typeof cx>[0];\n}\n\nexport const PopoverBody: React.FC<PopoverBodyProps> = ({\n  children,\n  className,\n}) => <div className={cx(className)}>{children}</div>;\n\nexport default PopoverBody;\nexport { styles };\n","import React from 'react';\nimport cx from 'classnames';\n\nimport { Props as ButtonProps } from '../Button';\n\nimport styles from './PopoverFooter.module.scss';\nexport interface PopoverFooterProps {\n  /** Children of `Popover.Footer` which should be one or more `Button` components. */\n  children: React.ReactElement<ButtonProps> | React.ReactElement<ButtonProps>[];\n  /** CSS className for `Popover.Footer` container. */\n  className?: Parameters<typeof cx>[0];\n}\n\nexport const PopoverFooter: React.FC<PopoverFooterProps> = ({\n  children,\n  className,\n}) => (\n  <footer className={cx(styles.popoverFooter, className)}>\n    {/* Adding a className to override the button's siblings margin right value. */}\n    {React.Children.map(children, child => {\n      if (React.isValidElement(child)) {\n        return React.cloneElement(child, {\n          className: cx(child?.props?.className, styles.popoverFooterChild),\n        });\n      }\n      return null;\n    })}\n  </footer>\n);\n\nexport default PopoverFooter;\nexport { styles };\n","import React, { useState, useEffect } from 'react';\nimport cx from 'classnames';\nimport { usePopper } from 'react-popper';\nimport FocusTrap from 'focus-trap-react';\n\nimport useOutsideClick from '../utils/hooks/useOutsideClick';\n\nimport PopoverHeader, { PopoverHeaderProps } from './PopoverHeader';\nimport PopoverBody, { PopoverBodyProps } from './PopoverBody';\nimport PopoverFooter, { PopoverFooterProps } from './PopoverFooter';\nimport Portal from '../Portal';\n\nimport styles from './Popover.module.scss';\n\nexport interface PopoverComposition {\n  Header: React.FC<PopoverHeaderProps>;\n  Body: React.FC<PopoverBodyProps>;\n  Footer: React.FC<PopoverFooterProps>;\n}\nexport interface Props {\n  /** Children of Popover which should have one Popover.Header, Popover.Body, and Popover.Footer. */\n  children?: [\n    React.ReactElement<PopoverHeaderProps>,\n    React.ReactElement<PopoverBodyProps>,\n    React.ReactElement<PopoverFooterProps>,\n  ];\n  /** CSS className for Popover container div. */\n  className?: Parameters<typeof cx>[0];\n  /** When true, the Popover will be visible. */\n  isOpen: boolean;\n  /** Accessible name for the Popover. */\n  label: string;\n  /** Function that will be called when the Popover is closing. */\n  onClose?: (event?: MouseEvent) => void;\n  /** Function that will be called when the the user clicks outside while the Popover is open. */\n  onOutsideClick?: () => void;\n  /** Setter for toggling isOpen. */\n  setOpen: (state: boolean) => void;\n  /** Reference to the target element. */\n  targetElement: HTMLElement | null;\n}\n\n// This resolves `ReferenceError: window is not defined` when using in NextJS.\nconst isBrowser = () => typeof window !== 'undefined';\n\nexport const Popover: React.FC<Props> & PopoverComposition = ({\n  children,\n  className,\n  isOpen = false,\n  targetElement,\n  label,\n  setOpen,\n  onClose,\n  onOutsideClick,\n}) => {\n  const [popoverElement, setPopoverElement] = useState<HTMLElement | null>(\n    null,\n  );\n  const [currentOffset, setCurrentOffset] = useState<[number, number]>([0, 4]);\n\n  // Close the popover element when user clicks outside of popover\n  useOutsideClick(popoverElement, () => {\n    setOpen(false);\n    if (onOutsideClick) {\n      onOutsideClick();\n    }\n  });\n\n  // Closes dialog when escape key is pressed.\n  useEffect(() => {\n    const handleUserKeyPress = (e: any) => {\n      if (isOpen && e.key === 'Escape') {\n        setOpen(false);\n      }\n    };\n\n    // IsBrowser is checking if the code is running in the server or client which is primary for NextJS.\n    isBrowser() && window.addEventListener('keydown', handleUserKeyPress);\n\n    return () => {\n      isBrowser() && window.removeEventListener('keydown', handleUserKeyPress);\n    };\n  }, [isOpen, setOpen]);\n\n  const popper = usePopper(targetElement, popoverElement, {\n    placement: 'bottom',\n    modifiers: [\n      {\n        name: 'offset',\n        options: {\n          // https://popper.js.org/docs/v2/modifiers/offset/\n          offset: currentOffset,\n        },\n      },\n    ],\n  });\n\n  useEffect(() => {\n    // Calculating the popover x offset so it left aligns with target element.\n    if (popoverElement !== null && targetElement !== null) {\n      const { width: targetWidth } = targetElement?.getBoundingClientRect();\n      const { width: popoverWidth } = popoverElement?.getBoundingClientRect();\n\n      let popoverXOffset = (popoverWidth - targetWidth) / 2;\n\n      setCurrentOffset([popoverXOffset, 4]);\n    }\n  }, [targetElement, popoverElement]);\n\n  useEffect(() => {\n    // Invokes onClose function when popover unmounts\n    return () => {\n      if (popoverElement !== null && onClose !== undefined && isOpen === true) {\n        onClose();\n      }\n    };\n  }, [isOpen, onClose, setOpen, popoverElement]);\n\n  return (\n    <>\n      {isOpen && (\n        <Portal className='portal-popover'>\n          <FocusTrap>\n            <div\n              role='dialog'\n              {...popper.attributes.popper}\n              style={popper.styles.popper}\n              className={cx(styles.popover, className)}\n              ref={setPopoverElement}\n              arial-label={label}\n              arial-hidden={!isOpen ? true : undefined}\n            >\n              {children}\n            </div>\n          </FocusTrap>\n        </Portal>\n      )}\n    </>\n  );\n};\n\nPopover.displayName = 'Popover';\n\nPopover.Header = PopoverHeader;\nPopover.Body = PopoverBody;\nPopover.Footer = PopoverFooter;\n\nexport default Popover;\nexport { styles };\n","import React from 'react';\nimport cx from 'classnames';\n\nimport styles from './PopoverHeader.module.scss';\n\nexport interface PopoverHeaderProps {\n  /** Children of `Popover.Header`. */\n  children?: React.ReactNode;\n  /** CSS className for `Popover.Header` container. */\n  className?: Parameters<typeof cx>[0];\n}\n\nexport const PopoverHeader: React.FC<PopoverHeaderProps> = ({\n  children,\n  className,\n}) => {\n  return (\n    <header className={cx(styles.popoverHeader, className)}>{children}</header>\n  );\n};\n\nexport default PopoverHeader;\nexport { styles };\n"],"names":["isBrowser","window","Popover","_a","children","className","_b","isOpen","targetElement","label","setOpen","onClose","onOutsideClick","_c","useState","popoverElement","setPopoverElement","_d","currentOffset","setCurrentOffset","useOutsideClick","useEffect","handleUserKeyPress","e","key","addEventListener","removeEventListener","popper","usePopper","placement","modifiers","name","options","offset","targetWidth","getBoundingClientRect","popoverWidth","undefined","React","Portal","FocusTrap","role","attributes","style","styles","cx","popover","ref","displayName","Header","Body","Footer","Children","map","child","isValidElement","cloneElement","props"],"mappings":"qrCAUO,k7BCGA,m6BC8BP,IAAMA,EAAY,WAAM,MAAkB,oBAAXC,QAElBC,EAAgD,SAACC,OAC5DC,aACAC,cACAC,WAAAC,gBACAC,kBACAC,UACAC,YACAC,YACAC,mBAEMC,EAAsCC,WAC1C,MADKC,OAAgBC,OAGjBC,EAAoCH,WAA2B,CAAC,EAAG,IAAlEI,OAAeC,OAGtBC,kBAAgBL,GAAgB,WAC9BL,GAAQ,GACJE,GACFA,OAKJS,aAAU,WACR,IAAMC,EAAqB,SAACC,GACtBhB,GAAoB,WAAVgB,EAAEC,KACdd,GAAQ,IAOZ,OAFAV,KAAeC,OAAOwB,iBAAiB,UAAWH,GAE3C,WACLtB,KAAeC,OAAOyB,oBAAoB,UAAWJ,MAEtD,CAACf,EAAQG,IAEZ,IAAMiB,EAASC,YAAUpB,EAAeO,EAAgB,CACtDc,UAAW,SACXC,UAAW,CACT,CACEC,KAAM,SACNC,QAAS,CAEPC,OAAQf,OA2BhB,OArBAG,aAAU,WAER,GAAuB,OAAnBN,GAA6C,OAAlBP,EAAwB,CAC7C,IAAO0B,GAAgB1B,MAAAA,SAAAA,EAAe2B,+BAC/BC,GAAiBrB,MAAAA,SAAAA,EAAgBoB,+BAIhDhB,EAAiB,EAFKiB,EAAeF,GAAe,EAElB,OAEnC,CAAC1B,EAAeO,IAEnBM,aAAU,WAER,OAAO,WACkB,OAAnBN,QAAuCsB,IAAZ1B,IAAoC,IAAXJ,GACtDI,OAGH,CAACJ,EAAQI,EAASD,EAASK,IAG5BuB,gDACG/B,GACC+B,wBAACC,UAAOlC,UAAU,kBAChBiC,wBAACE,eACCF,0CACEG,KAAK,UACDd,EAAOe,WAAWf,QACtBgB,MAAOhB,EAAOiB,OAAOjB,OACrBtB,UAAWwC,UAAGD,EAAOE,QAASzC,GAC9B0C,IAAK/B,gBACQP,kBACEF,QAAgB8B,IAE9BjC,OASfF,EAAQ8C,YAAc,UAEtB9C,EAAQ+C,OCnImD,SAAC9C,OAC1DC,aACAC,cAEA,OACEiC,kCAAQjC,UAAWwC,UAAGD,EAAsBvC,IAAaD,ID+H7DF,EAAQgD,KFtI+C,SAAC/C,OACtDC,aACAC,cACI,OAAAiC,+BAAKjC,UAAWwC,UAAGxC,IAAaD,IEoItCF,EAAQiD,ODpImD,SAAChD,OAC1DC,aACAC,cACI,OACJiC,kCAAQjC,UAAWwC,UAAGD,EAAsBvC,IAEzCiC,UAAMc,SAASC,IAAIjD,GAAU,SAAAkD,SAC5B,OAAIhB,UAAMiB,eAAeD,GAChBhB,UAAMkB,aAAaF,EAAO,CAC/BjD,UAAWwC,oBAAGS,MAAAA,SAAAA,EAAOG,4BAAOpD,UAAWuC,KAGpC"}