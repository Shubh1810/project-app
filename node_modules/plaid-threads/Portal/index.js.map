{"version":3,"file":"index.js","sources":["../../src/Portal/index.tsx"],"sourcesContent":["import React, { useLayoutEffect, useRef } from 'react';\nimport cx from 'classnames';\nimport ReactDom from 'react-dom';\nimport Theme, { useThemeContext } from '../Theme';\n\nimport styles from './Portal.module.scss';\nexport interface Props {\n  /** The element to the will appear inside of the portal container */\n  children: React.ReactNode;\n  /** Add a custom className. */\n  className?: Parameters<typeof cx>[0];\n  /** Specific the root element that portal node should be append to */\n  mountedNode?: HTMLElement | null;\n}\n\n/**\n *\n * Portal is a util component that will allow elements to be rendered outside the DOM hierarchy of the parent component.\n * These are useful for popovers and modals.\n */\nexport const Portal: React.FC<Props> = ({\n  children,\n  className,\n  mountedNode = document.body,\n}) => {\n  const portalNode = useRef<HTMLElement | null>(null);\n  const theme = useThemeContext();\n\n  if (portalNode.current === null) {\n    portalNode.current = document.createElement('div');\n    portalNode.current.className = cx(styles.portal, className);\n  }\n\n  // Since we're doing DOM manipulation, using useLayoutEffect so that changes are handled synchronously.\n  // https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n  useLayoutEffect(() => {\n    if (portalNode.current !== null) {\n      mountedNode?.appendChild(portalNode.current);\n    }\n\n    // Removes the portal node when component gets unmounted.\n    return () => {\n      if (portalNode.current !== null) {\n        portalNode.current && mountedNode?.removeChild(portalNode.current);\n        portalNode.current = null;\n      }\n    };\n  }, [portalNode, mountedNode]);\n\n  return ReactDom.createPortal(\n    <Theme theme={theme}>{children}</Theme>,\n    portalNode.current,\n  );\n};\n\nPortal.displayName = 'Portal';\nexport default Portal;\nexport { styles };\n"],"names":["Portal","_a","children","className","_b","mountedNode","document","body","portalNode","useRef","theme","useThemeContext","current","createElement","cx","styles","portal","useLayoutEffect","appendChild","removeChild","ReactDom","createPortal","React","Theme","displayName"],"mappings":"69BAoBaA,EAA0B,SAACC,OACtCC,aACAC,cACAC,gBAAAC,aAAcC,SAASC,OAEjBC,EAAaC,SAA2B,MACxCC,EAAQC,oBAuBd,OArB2B,OAAvBH,EAAWI,UACbJ,EAAWI,QAAUN,SAASO,cAAc,OAC5CL,EAAWI,QAAQT,UAAYW,UAAGC,EAAOC,OAAQb,IAKnDc,mBAAgB,WAMd,OAL2B,OAAvBT,EAAWI,UACbP,MAAAA,GAAAA,EAAaa,YAAYV,EAAWI,UAI/B,WACsB,OAAvBJ,EAAWI,UACbJ,EAAWI,UAAWP,MAAAA,GAAAA,EAAac,YAAYX,EAAWI,UAC1DJ,EAAWI,QAAU,SAGxB,CAACJ,EAAYH,IAETe,UAASC,aACdC,wBAACC,SAAMb,MAAOA,GAAQR,GACtBM,EAAWI,UAIfZ,EAAOwB,YAAc"}