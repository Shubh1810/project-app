{"version":3,"file":"index.js","sources":["../../src/ChartGroup/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport cx from 'classnames';\n\nimport styles from './ChartGroup.module.scss';\nimport Text from '../Text';\n\nimport { Chart, Series } from 'highcharts';\nimport Button from '../Button';\nimport Popover from '../Popover';\nimport Checkbox from '../Checkbox';\nimport { ChartProps } from 'Chart';\n\nexport interface Props {\n  title: string;\n  description?: string;\n  children?: React.ReactElement<ChartProps>;\n  className?: Parameters<typeof cx>[0];\n}\n\nconst MockFilterGroup = ({ chart, ...restProps }: { chart: Chart | null }) => {\n  const [seriesVisibility, setSeriesVisibility] = useState({\n    'march-usage': true,\n    'april-usage': true,\n  });\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [targetElement, setTargetElement] = useState<HTMLElement | null>(null);\n\n  const toggleSeries = (ids: string[]) => {\n    return ids.forEach(id => {\n      if (!chart || !chart.get(id)) {\n        return;\n      }\n\n      const series = chart.get(id) as Series;\n      series.setVisible(seriesVisibility[id]);\n    });\n  };\n  const handleSetOpen = () => setIsOpen(!isOpen);\n  const applyFilters = () => {\n    toggleSeries(Object.keys(seriesVisibility));\n    setIsOpen(!isOpen);\n  };\n\n  if (!chart) {\n    return <></>;\n  }\n\n  return (\n    <div className={styles.filterGroup}>\n      <Button\n        ref={setTargetElement}\n        onClick={handleSetOpen}\n        inline\n        small\n        centered\n      >\n        Billing Period\n      </Button>\n      <Popover\n        {...restProps}\n        className={styles.filterPopover}\n        isOpen={isOpen}\n        label='Select billing Periods to view'\n        setOpen={handleSetOpen}\n        targetElement={targetElement}\n      >\n        <Popover.Header className={styles.filterPopoverHeader}>\n          Billing Period\n        </Popover.Header>\n        <Popover.Body>\n          <p>Select up to three months.</p>\n          <Checkbox\n            id='april-usage'\n            value={seriesVisibility['april-usage']}\n            onChange={() =>\n              setSeriesVisibility({\n                ...seriesVisibility,\n                'april-usage': !seriesVisibility['april-usage'],\n              })\n            }\n          >\n            April 2022\n          </Checkbox>\n          <Checkbox\n            id='march-usage'\n            value={seriesVisibility['march-usage']}\n            onChange={() =>\n              setSeriesVisibility({\n                ...seriesVisibility,\n                'march-usage': !seriesVisibility['march-usage'],\n              })\n            }\n          >\n            March 2022\n          </Checkbox>\n        </Popover.Body>\n        <Popover.Footer className={styles.filterPopoverFooter}>\n          <Button\n            className={styles.filterPopoverFooterButton}\n            onClick={handleSetOpen}\n            small\n            centered\n            tertiary\n            inline\n          >\n            Cancel\n          </Button>\n          <Button\n            className={styles.filterPopoverFooterButton}\n            onClick={handleSetOpen}\n            small\n            centered\n            secondary\n            inline\n          >\n            Reset\n          </Button>\n          <Button\n            className={styles.filterPopoverFooterButton}\n            onClick={applyFilters}\n            small\n            centered\n            inline\n          >\n            Apply\n          </Button>\n        </Popover.Footer>\n      </Popover>\n    </div>\n  );\n};\n\nexport const ChartGroup: React.FC<Props> = ({\n  title,\n  description,\n  children,\n  className,\n}) => {\n  const [chart, setChart] = useState(null);\n\n  return (\n    <div className={cx(styles.chart, className)}>\n      <Text as='h3' className={styles.title}>\n        {title}\n      </Text>\n      {description && <Text className={styles.description}>{description}</Text>}\n      <MockFilterGroup chart={chart} />\n      {React.Children.map(children, child => {\n        if (!React.isValidElement(child)) {\n          return child;\n        }\n        return React.cloneElement(child, { setChart });\n      })}\n    </div>\n  );\n};\n\nChartGroup.displayName = 'ChartGroup';\nexport default ChartGroup;\nexport { styles };\n"],"names":["MockFilterGroup","_a","chart","restProps","_b","useState","seriesVisibility","setSeriesVisibility","_c","isOpen","setIsOpen","_d","targetElement","setTargetElement","handleSetOpen","React","className","styles","filterGroup","Button","ref","onClick","inline","small","centered","Popover","filterPopover","label","setOpen","Header","filterPopoverHeader","Body","Checkbox","id","value","onChange","Footer","filterPopoverFooter","filterPopoverFooterButton","tertiary","secondary","Object","keys","forEach","get","setVisible","ChartGroup","title","description","children","setChart","cx","Text","as","Children","map","child","isValidElement","cloneElement","displayName"],"mappings":"yjGAmBA,IAAMA,EAAkB,SAACC,GAAE,IAAAC,UAAUC,aAAZ,WACjBC,EAA0CC,WAAS,CACvD,eAAe,EACf,eAAe,IAFVC,OAAkBC,OAKnBC,EAAsBH,YAAS,GAA9BI,OAAQC,OAETC,EAAoCN,WAA6B,MAAhEO,OAAeC,OAYhBC,EAAgB,WAAM,OAAAJ,GAAWD,IAMvC,OAAKP,EAKHa,+BAAKC,UAAWC,EAAOC,aACrBH,wBAACI,UACCC,IAAKP,EACLQ,QAASP,EACTQ,UACAC,SACAC,+BAIFT,wBAACU,wBACKtB,GACJa,UAAWC,EAAOS,cAClBjB,OAAQA,EACRkB,MAAM,iCACNC,QAASd,EACTF,cAAeA,IAEfG,wBAACU,UAAQI,QAAOb,UAAWC,EAAOa,uCAGlCf,wBAACU,UAAQM,UACPhB,+DACAA,wBAACiB,YACCC,GAAG,cACHC,MAAO5B,EAAiB,eACxB6B,SAAU,WACR,OAAA5B,2BACKD,IACH,eAAgBA,EAAiB,kCAMvCS,wBAACiB,YACCC,GAAG,cACHC,MAAO5B,EAAiB,eACxB6B,SAAU,WACR,OAAA5B,2BACKD,IACH,eAAgBA,EAAiB,mCAOzCS,wBAACU,UAAQW,QAAOpB,UAAWC,EAAOoB,qBAChCtB,wBAACI,UACCH,UAAWC,EAAOqB,0BAClBjB,QAASP,EACTS,SACAC,YACAe,YACAjB,qBAIFP,wBAACI,UACCH,UAAWC,EAAOqB,0BAClBjB,QAASP,EACTS,SACAC,YACAgB,aACAlB,oBAIFP,wBAACI,UACCH,UAAWC,EAAOqB,0BAClBjB,QAjFW,WACNoB,OAAOC,KAAKpC,GAXdqC,SAAQ,SAAAV,GACZ/B,GAAUA,EAAM0C,IAAIX,IAIV/B,EAAM0C,IAAIX,GAClBY,WAAWvC,EAAiB2B,OAMrCvB,GAAWD,IAgFHc,SACAC,YACAF,uBA9EDP,kDAwFE+B,EAA8B,SAAC7C,OAC1C8C,UACAC,gBACAC,aACAjC,cAEMZ,EAAoBC,WAAS,MAA5BH,OAAOgD,OAEd,OACEnC,+BAAKC,UAAWmC,UAAGlC,EAAOf,MAAOc,IAC/BD,wBAACqC,QAAKC,GAAG,KAAKrC,UAAWC,EAAO8B,OAC7BA,GAEFC,GAAejC,wBAACqC,QAAKpC,UAAWC,EAAO+B,aAAcA,GACtDjC,wBAACf,GAAgBE,MAAOA,IACvBa,UAAMuC,SAASC,IAAIN,GAAU,SAAAO,GAC5B,OAAKzC,UAAM0C,eAAeD,GAGnBzC,UAAM2C,aAAaF,EAAO,CAAEN,aAF1BM,OAQjBV,EAAWa,YAAc"}