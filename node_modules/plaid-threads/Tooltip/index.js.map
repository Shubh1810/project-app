{"version":3,"file":"index.js","sources":["../../src/Tooltip/index.tsx"],"sourcesContent":["import cx from 'classnames';\nimport React, { CSSProperties, useEffect, useState } from 'react';\nimport { usePopper } from 'react-popper';\nimport { Placement } from '@popperjs/core';\n\nimport styles from './Tooltip.module.scss';\n\nexport type Trigger = 'hover' | 'click' | 'focus' | 'disabled';\n\nexport interface Props {\n  block?: boolean;\n  children?: React.ReactNode;\n  className?: Parameters<typeof cx>[0];\n  clickable?: boolean;\n  dark?: boolean;\n  id?: string;\n  isOpen?: boolean;\n  placement: Placement;\n  showOn: Trigger | Trigger[];\n  small?: boolean;\n  style?: CSSProperties;\n  target: React.ReactElement;\n  wrapperClassName?: Parameters<typeof cx>[0];\n  triggerWrapperClassName?: Parameters<typeof cx>[0];\n\n  // https://popper.js.org/docs/v2/modifiers/offset/\n  offset?: [number, number];\n  onShow?: () => void;\n  onHide?: () => void;\n  onEscape?: () => void;\n}\n\ninterface WrapperProps {\n  onClick?: () => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  onPointerEnter?: () => void;\n  onPointerLeave?: () => void;\n}\n\nexport const Tooltip: React.FC<Props> = props => {\n  const [targetElement, setTargetElement] = useState<HTMLDivElement | null>(\n    null,\n  );\n  const [tooltipElement, setTooltipElement] = useState<HTMLDivElement | null>(\n    null,\n  );\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null);\n\n  const popper = usePopper(targetElement, tooltipElement, {\n    placement: props.placement,\n    modifiers: [\n      {\n        name: 'offset',\n        options: {\n          // https://popper.js.org/docs/v2/modifiers/offset/\n          offset: props.offset || [0, 10],\n        },\n      },\n      { name: 'arrow', options: { element: arrowElement, padding: 12 } },\n    ],\n  });\n\n  const [show, setShow] = React.useState(Boolean(props.isOpen));\n\n  const showTooltip = () => {\n    if (!show) {\n      props.onShow && props.onShow();\n      setShow(true);\n    }\n  };\n  const hideTooltip = () => {\n    if (show) {\n      props.onHide && props.onHide();\n      setShow(false);\n    }\n  };\n\n  const toggleShowTooltip = () => {\n    if (show) {\n      hideTooltip();\n    } else {\n      showTooltip();\n    }\n  };\n\n  useEffect(() => {\n    if (props.showOn === 'disabled') {\n      return;\n    }\n\n    const onTooltipMouseEnter = () => showTooltip();\n    const onTooltipMouseLeave = () => hideTooltip();\n\n    if (props.clickable && tooltipElement) {\n      tooltipElement.addEventListener('mouseenter', onTooltipMouseEnter);\n      tooltipElement.addEventListener('mouseleave', onTooltipMouseLeave);\n    }\n\n    /**\n     * Buggy: this is triggered when interactive elements in the Tooltip are clicked as well because\n     * event.currentTarget is always `document`\n     */\n    const clickOutsideHandler = (event: MouseEvent) => {\n      if (\n        tooltipElement &&\n        event.target instanceof Node &&\n        !tooltipElement.contains(event.target)\n      ) {\n        props.onEscape && props.onEscape();\n        hideTooltip();\n      }\n    };\n\n    const escapeKeyHandler = (event: KeyboardEvent) => {\n      if (event.keyCode === 27) {\n        props.onEscape && props.onEscape();\n        hideTooltip();\n      }\n    };\n\n    // For tooltips that show/hide on target click, also handle escaping via outside click or escape key\n    if (props.showOn === 'click') {\n      document.addEventListener('click', clickOutsideHandler);\n      document.addEventListener('keyup', escapeKeyHandler);\n    }\n\n    return () => {\n      if (props.clickable && tooltipElement) {\n        tooltipElement.removeEventListener('mouseenter', onTooltipMouseEnter);\n        tooltipElement.removeEventListener('mouseleave', onTooltipMouseLeave);\n      }\n\n      if (props.showOn === 'click') {\n        document.removeEventListener('click', clickOutsideHandler);\n        document.removeEventListener('keyup', escapeKeyHandler);\n      }\n    };\n  });\n\n  const wrapperProps: WrapperProps = {};\n\n  [props.showOn].flat().forEach((trigger: Trigger) => {\n    switch (trigger) {\n      case 'click':\n        wrapperProps.onClick = toggleShowTooltip;\n        break;\n      case 'focus':\n        wrapperProps.onFocus = showTooltip;\n        wrapperProps.onBlur = hideTooltip;\n        break;\n      case 'hover':\n        wrapperProps.onPointerEnter = showTooltip;\n        wrapperProps.onPointerLeave = hideTooltip;\n    }\n  });\n\n  return (\n    <div className={cx(styles.tooltipWrapper, props.wrapperClassName)}>\n      <div\n        className={cx(\n          styles.triggerWrapper,\n          props.triggerWrapperClassName,\n          props.block && styles.block,\n        )}\n        ref={setTargetElement}\n        {...wrapperProps}\n      >\n        {props.target}\n      </div>\n      <div\n        style={popper.styles.popper}\n        className={cx(\n          styles.tooltip,\n          props.small && styles.small,\n          props.dark && styles.dark,\n          props.showOn !== 'click' &&\n            props.clickable &&\n            styles.tooltipClickable,\n          show && styles.showTooltip,\n          props.className,\n        )}\n        role='tooltip'\n        {...popper.attributes.popper}\n        ref={setTooltipElement}\n      >\n        {typeof props.children === 'string' ? (\n          <span className={styles.text}>{props.children}</span>\n        ) : (\n          props.children\n        )}\n        <div\n          style={popper.styles.arrow}\n          className={styles.arrow}\n          ref={setArrowElement}\n        />\n      </div>\n    </div>\n  );\n};\n\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;\nexport { styles };\n"],"names":["Tooltip","props","_a","useState","targetElement","setTargetElement","_b","tooltipElement","setTooltipElement","_c","arrowElement","setArrowElement","popper","usePopper","placement","modifiers","name","options","offset","element","padding","_d","React","Boolean","isOpen","show","setShow","showTooltip","onShow","hideTooltip","onHide","toggleShowTooltip","useEffect","showOn","onTooltipMouseEnter","onTooltipMouseLeave","clickable","addEventListener","clickOutsideHandler","event","target","Node","contains","onEscape","escapeKeyHandler","keyCode","document","removeEventListener","wrapperProps","flat","forEach","trigger","onClick","onFocus","onBlur","onPointerEnter","onPointerLeave","className","cx","styles","tooltipWrapper","wrapperClassName","triggerWrapper","triggerWrapperClassName","block","ref","style","tooltip","small","dark","tooltipClickable","role","attributes","children","text","arrow","displayName"],"mappings":"m7IAwCaA,EAA2B,SAAAC,GAChC,IAAAC,EAAoCC,WACxC,MADKC,OAAeC,OAGhBC,EAAsCH,WAC1C,MADKI,OAAgBC,OAGjBC,EAAkCN,WAAgC,MAAjEO,OAAcC,OAEfC,EAASC,YAAUT,EAAeG,EAAgB,CACtDO,UAAWb,EAAMa,UACjBC,UAAW,CACT,CACEC,KAAM,SACNC,QAAS,CAEPC,OAAQjB,EAAMiB,QAAU,CAAC,EAAG,MAGhC,CAAEF,KAAM,QAASC,QAAS,CAAEE,QAAST,EAAcU,QAAS,QAI1DC,EAAkBC,UAAMnB,SAASoB,QAAQtB,EAAMuB,SAA9CC,OAAMC,OAEPC,EAAc,WACbF,IACHxB,EAAM2B,QAAU3B,EAAM2B,SACtBF,GAAQ,KAGNG,EAAc,WACdJ,IACFxB,EAAM6B,QAAU7B,EAAM6B,SACtBJ,GAAQ,KAINK,EAAoB,WACpBN,EACFI,IAEAF,KAIJK,aAAU,WACR,GAAqB,aAAjB/B,EAAMgC,OAAV,CAIA,IAAMC,EAAsB,WAAM,OAAAP,KAC5BQ,EAAsB,WAAM,OAAAN,KAE9B5B,EAAMmC,WAAa7B,IACrBA,EAAe8B,iBAAiB,aAAcH,GAC9C3B,EAAe8B,iBAAiB,aAAcF,IAOhD,IAAMG,EAAsB,SAACC,GAEzBhC,GACAgC,EAAMC,kBAAkBC,OACvBlC,EAAemC,SAASH,EAAMC,UAE/BvC,EAAM0C,UAAY1C,EAAM0C,WACxBd,MAIEe,EAAmB,SAACL,GACF,KAAlBA,EAAMM,UACR5C,EAAM0C,UAAY1C,EAAM0C,WACxBd,MAUJ,MALqB,UAAjB5B,EAAMgC,SACRa,SAAST,iBAAiB,QAASC,GACnCQ,SAAST,iBAAiB,QAASO,IAG9B,WACD3C,EAAMmC,WAAa7B,IACrBA,EAAewC,oBAAoB,aAAcb,GACjD3B,EAAewC,oBAAoB,aAAcZ,IAG9B,UAAjBlC,EAAMgC,SACRa,SAASC,oBAAoB,QAAST,GACtCQ,SAASC,oBAAoB,QAASH,SAK5C,IAAMI,EAA6B,GAiBnC,MAfA,CAAC/C,EAAMgC,QAAQgB,OAAOC,SAAQ,SAACC,GAC7B,OAAQA,GACN,IAAK,QACHH,EAAaI,QAAUrB,EACvB,MACF,IAAK,QACHiB,EAAaK,QAAU1B,EACvBqB,EAAaM,OAASzB,EACtB,MACF,IAAK,QACHmB,EAAaO,eAAiB5B,EAC9BqB,EAAaQ,eAAiB3B,MAKlCP,+BAAKmC,UAAWC,UAAGC,EAAOC,eAAgB3D,EAAM4D,mBAC9CvC,0CACEmC,UAAWC,UACTC,EAAOG,eACP7D,EAAM8D,wBACN9D,EAAM+D,OAASL,EAAOK,OAExBC,IAAK5D,GACD2C,GAEH/C,EAAMuC,QAETlB,0CACE4C,MAAOtD,EAAO+C,OAAO/C,OACrB6C,UAAWC,UACTC,EAAOQ,QACPlE,EAAMmE,OAAST,EAAOS,MACtBnE,EAAMoE,MAAQV,EAAOU,KACJ,UAAjBpE,EAAMgC,QACJhC,EAAMmC,WACNuB,EAAOW,iBACT7C,GAAQkC,EAAOhC,YACf1B,EAAMwD,WAERc,KAAK,WACD3D,EAAO4D,WAAW5D,QACtBqD,IAAKzD,IAEsB,iBAAnBP,EAAMwE,SACZnD,gCAAMmC,UAAWE,EAAOe,MAAOzE,EAAMwE,UAErCxE,EAAc,SAEhBqB,+BACE4C,MAAOtD,EAAO+C,OAAOgB,MACrBlB,UAAWE,EAAOgB,MAClBV,IAAKtD,OAOfX,EAAQ4E,YAAc"}