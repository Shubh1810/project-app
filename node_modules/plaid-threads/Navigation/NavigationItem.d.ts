import React, { ComponentType } from 'react';
import cx from 'classnames';
import styles from './NavigationItem.module.scss';
export interface NavigationItemProps {
    /** Children that will be displayed in an accordion if `variant="expandable"`.  */
    children?: React.ReactNode;
    /** Apply CSS class to the container. */
    className?: Parameters<typeof cx>[0];
    /** The icon that appears before the `label`. */
    icon?: React.ReactElement;
    /** If `true`, will apply the active state to `Navigation.Item`. */
    isActive?: boolean;
    /** If `true` and `variant="expandable"`, will show nested items. */
    isExpanded?: boolean;
    /** The label for the `Navigation.Item`. */
    label: string;
    /** The function that will be called when the `Navigation.Item` is clicked. This will only apply for `variant="default"`, `variant="expandable"`, or `variant="drillIn"`. */
    onClick?: () => void;
    /** If `variant="default"`, will navigate to the destination route when clicked. */
    to?: string;
    /** Select between different interactive types of `Navigation.Item`.  */
    variant?: 'default' | 'nestedLink' | 'expandable' | 'drillIn';
    /** Component that will wrap around `Navigation.Item`. In most cases, it would be `Link` from React Router or any other framework. */
    component?: ComponentType;
}
export declare const NavigationItem: React.FC<NavigationItemProps>;
export default NavigationItem;
export { styles };
//# sourceMappingURL=NavigationItem.d.ts.map