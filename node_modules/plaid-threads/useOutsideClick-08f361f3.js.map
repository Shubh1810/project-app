{"version":3,"file":"useOutsideClick-08f361f3.js","sources":["../src/utils/hooks/useOutsideClick.ts"],"sourcesContent":["import { useEffect } from 'react';\n\n/**\n * Handles clicks that occur outside of the component.\n * @param {HTMLElement} node - Reference to the component element.\n * @param {func} handler -  The function that is executed when the user clicks outside of the component.\n */\nconst useOutsideClick = (\n  node: HTMLElement | null,\n  handler: (event: MouseEvent) => void,\n) => {\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      // Early return if node isn't available.\n      if (node === null) return;\n\n      // Invokes callback function if the click target\n      // doesn't contain the node.\n      if (node && !node.contains(event.target as Element)) {\n        event.stopPropagation();\n        return handler(event);\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [node, handler]);\n};\n\nexport default useOutsideClick;\n"],"names":["node","handler","useEffect","handleClickOutside","event","contains","target","stopPropagation","document","addEventListener","removeEventListener"],"mappings":"4DAOwB,SACtBA,EACAC,GAEAC,aAAU,WACR,SAASC,EAAmBC,GAE1B,GAAa,OAATJ,EAIJ,OAAIA,IAASA,EAAKK,SAASD,EAAME,SAC/BF,EAAMG,kBACCN,EAAQG,SAFjB,EAQF,OAFAI,SAASC,iBAAiB,YAAaN,GAEhC,WACLK,SAASE,oBAAoB,YAAaP,MAE3C,CAACH,EAAMC"}