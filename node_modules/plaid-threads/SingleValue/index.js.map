{"version":3,"file":"index.js","sources":["../../src/SingleValue/index.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nimport ArrowUp from '../Icons/ArrowUp';\nimport Information from '../Icons/Information';\nimport Note from '../Note';\nimport Text from '../Text';\nimport Tooltip from '../Tooltip';\n\nimport styles from './SingleValue.module.scss';\n\nexport interface Props {\n  /** Override SingleValue styles by adding a className */\n  className?: Parameters<typeof cx>[0];\n  /** Text shown in the tooltip when hovering over the info icon. Info icon does not show\n   *  unless this value is present. */\n  infoText?: string;\n  /** Text shown below the value */\n  subtitle?: string;\n  /** Value shown above the value */\n  title: string;\n  /** Optional value that when present, will appear in a trending section in the bottom right */\n  trendingValue?: number;\n  /** Value shown in the center of the component */\n  value: number;\n}\n\nexport const SingleValue: React.FC<Props> = ({\n  className,\n  infoText,\n  subtitle,\n  title,\n  trendingValue,\n  value,\n}) => (\n  <div className={cx(styles.singleValue, className)}>\n    <div className={cx(styles.title, infoText && styles.info)}>\n      <Text contrast='low' size={12} weight='medium' as='span'>\n        {title}\n      </Text>\n      {infoText ? (\n        <Tooltip\n          dark\n          placement='top'\n          showOn='hover'\n          small\n          target={<Information className={styles.infoIcon} />}\n          wrapperClassName={styles.infoTooltip}\n          triggerWrapperClassName={styles.infoTooltipTriggerWrapper}\n        >\n          {infoText}\n        </Tooltip>\n      ) : null}\n    </div>\n    <Text size={24} weight='semiBold' as='span' className={styles.value}>\n      {value.toLocaleString('en-US')}\n    </Text>\n\n    {subtitle ? (\n      <div\n        className={cx(\n          styles.subtitleContainer,\n          trendingValue != null && styles.noteContainer,\n        )}\n      >\n        <Text contrast='low' size={12} weight='medium' as='span'>\n          {subtitle}\n        </Text>\n        {trendingValue != null ? (\n          <div>\n            <Note className={styles.note} success solid>\n              <ArrowUp className={styles.noteIcon} />\n              {trendingValue.toLocaleString('en-US')}\n            </Note>\n          </div>\n        ) : null}\n      </div>\n    ) : null}\n  </div>\n);\n\nSingleValue.displayName = 'SingleValue';\nexport default SingleValue;\nexport { styles };\n"],"names":["SingleValue","_a","className","infoText","subtitle","title","trendingValue","value","React","cx","styles","singleValue","info","Text","contrast","size","weight","as","Tooltip","dark","placement","showOn","small","target","Information","infoIcon","wrapperClassName","infoTooltip","triggerWrapperClassName","infoTooltipTriggerWrapper","toLocaleString","subtitleContainer","noteContainer","Note","note","success","solid","ArrowUp","noteIcon","displayName"],"mappings":"qkGA2BaA,EAA+B,SAACC,OAC3CC,cACAC,aACAC,aACAC,UACAC,kBACAC,UACI,OACJC,+BAAKN,UAAWO,UAAGC,EAAOC,YAAaT,IACrCM,+BAAKN,UAAWO,UAAGC,EAAOL,MAAOF,GAAYO,EAAOE,OAClDJ,wBAACK,QAAKC,SAAS,MAAMC,KAAM,GAAIC,OAAO,SAASC,GAAG,QAC/CZ,GAEFF,EACCK,wBAACU,WACCC,QACAC,UAAU,MACVC,OAAO,QACPC,SACAC,OAAQf,wBAACgB,eAAYtB,UAAWQ,EAAOe,WACvCC,iBAAkBhB,EAAOiB,YACzBC,wBAAyBlB,EAAOmB,2BAE/B1B,GAED,MAENK,wBAACK,QAAKE,KAAM,GAAIC,OAAO,WAAWC,GAAG,OAAOf,UAAWQ,EAAOH,OAC3DA,EAAMuB,eAAe,UAGvB1B,EACCI,+BACEN,UAAWO,UACTC,EAAOqB,kBACU,MAAjBzB,GAAyBI,EAAOsB,gBAGlCxB,wBAACK,QAAKC,SAAS,MAAMC,KAAM,GAAIC,OAAO,SAASC,GAAG,QAC/Cb,GAEe,MAAjBE,EACCE,mCACEA,wBAACyB,QAAK/B,UAAWQ,EAAOwB,KAAMC,WAAQC,UACpC5B,wBAAC6B,WAAQnC,UAAWQ,EAAO4B,WAC1BhC,EAAcwB,eAAe,WAGhC,MAEJ,OAIR9B,EAAYuC,YAAc"}